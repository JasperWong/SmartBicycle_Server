<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jasper.ssm.mapper.BicycleMapper" >
    <resultMap id="BicycleResultMap" type="com.jasper.ssm.pojo.Bicycle" >
        <result column="id" property="id" jdbcType="INTEGER" />
        <result column="locker" property="locker" jdbcType="INTEGER" />
        <result column="alarm" property="alarm" jdbcType="INTEGER"/>
        <result column="longitude" property="longitude" jdbcType="FLOAT"/>
        <result column="latitude" property="latitude" jdbcType="FLOAT"/>
        <result column="status" property="status" javaType="INTEGER"/>
        
        
    </resultMap>

    <sql id="Bicycle_Column_List" >
        id,longitude,latitude,status
    </sql>

    <sql id="Bicycle_Status_List" >
         id, locker,alarm
    </sql>

    <select id="selectById" resultMap="BicycleResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Bicycle_Column_List" />
        from bicycle_info
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectStatusById" resultMap="BicycleResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Bicycle_Status_List" />
        from bicycle_status
        where id = #{id,jdbcType=INTEGER}
    </select>

    <update id="updateBicycle">
        insert INTO bicycle_info
        (id,longitude,latitude,status)
        VALUES
        <!--<foreach collection="list" index="index" item="item"-->
        <!--separator=",">-->
            (#{id,jdbcType=INTEGER}, #{longitude,jdbcType=FLOAT},#{latitude,jdbcType=FLOAT},#{status,jdbcType=INTEGER})
        <!--</foreach>-->
        ON DUPLICATE KEY UPDATE
            longitude=#{longitude,jdbcType=FLOAT},
            latitude=#{latitude,jdbcType=FLOAT},
            status=#{status,jdbcType=INTEGER}
    </update>

    <update id="updateBicycleStatus">
        insert INTO bicycle_status
        (id,locker,alarm)
        VALUES
        (#{id,jdbcType=INTEGER},#{locker,jdbcType=INTEGER},
            #{alarm,jdbcType=INTEGER})
        ON DUPLICATE KEY UPDATE
          locker =#{locker,jdbcType=INTEGER},
          alarm = #{alarm,jdbcType=INTEGER}



    </update>

</mapper>





